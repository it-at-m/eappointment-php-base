name: Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE: ${{ secrets.DOCKER_IMAGE }}
      COMPOSER_VERSION: "2"

    services:
      docker:
        image: docker:stable
        options: --privileged # needed to run Docker-in-Docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull existing image for cache (if any)
        run: |
          docker pull "${{ env.IMAGE }}:${{ env.VERSION }}-dev" || echo "No preexisting image found"

      - name: Build base image
        run: |
          docker build --pull \
            --build-arg XDEBUG_VERSION=${{ env.XDEBUG_VERSION }} \
            --build-arg COMPOSER_VERSION=${{ env.COMPOSER_VERSION }} \
            --target base \
            -f "${{ env.DOCKERFILE }}" \
            -t "${{ env.IMAGE }}:${{ env.VERSION }}-base" .

      - name: Build dev image without cache
        run: |
          docker build --pull --no-cache \
            --build-arg XDEBUG_VERSION=${{ env.XDEBUG_VERSION }} \
            --build-arg COMPOSER_VERSION=${{ env.COMPOSER_VERSION }} \
            --target dev \
            -f "${{ env.DOCKERFILE }}" \
            -t "${{ env.IMAGE }}:${{ env.VERSION }}-dev" .

      - name: Validate PHP setup
        run: docker run --rm -i "${{ env.IMAGE }}:${{ env.VERSION }}-dev" php-fpm -t

      - name: Push base image to Docker Hub
        run: docker push "${{ env.IMAGE }}:${{ env.VERSION }}-base"

      - name: Push dev image to Docker Hub
        run: docker push "${{ env.IMAGE }}:${{ env.VERSION }}-dev"

  php_v8_1:
    needs: build
    runs-on: ubuntu-latest
    env:
      VERSION: "8.1"
      DOCKERFILE: php81/Dockerfile
      XDEBUG_VERSION: "xdebug-3.1.3"

  php_v8_0:
    needs: build
    runs-on: ubuntu-latest
    env:
      VERSION: "8.0"
      DOCKERFILE: php80/Dockerfile
      XDEBUG_VERSION: "xdebug-3.1.3"

  php_v7_4:
    needs: build
    runs-on: ubuntu-latest
    env:
      VERSION: "7.4"
      DOCKERFILE: php74/Dockerfile
      XDEBUG_VERSION: "xdebug-2.9.8"

  php_v7_3:
    needs: build
    runs-on: ubuntu-latest
    env:
      VERSION: "7.3"
      DOCKERFILE: php73/Dockerfile
      XDEBUG_VERSION: "xdebug-2.9.8"
